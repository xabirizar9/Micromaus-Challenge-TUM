/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MsgType { 
    MsgType_Init = 0, 
    MsgType_SensorData = 1, 
    MsgType_Control = 2 
} MsgType;

/* Struct definitions */
/* command indicates remote client connection */
typedef struct _MsgInit { 
    char dummy_field;
} MsgInit;

typedef struct _MsgControl { 
    int32_t direction; 
    int32_t speed; 
} MsgControl;

typedef struct _SensorPacket { 
    int32_t left; 
    int32_t front; 
    int32_t right; 
} SensorPacket;

typedef struct _MausIncomingMessage { 
    MsgType type; 
    bool has_init;
    MsgInit init; 
    bool has_control;
    MsgControl control; 
} MausIncomingMessage;

typedef struct _MausOutgoingMessage { 
    MsgType type; 
    bool has_msgSensor;
    SensorPacket msgSensor; 
} MausOutgoingMessage;


/* Helper constants for enums */
#define _MsgType_MIN MsgType_Init
#define _MsgType_MAX MsgType_Control
#define _MsgType_ARRAYSIZE ((MsgType)(MsgType_Control+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorPacket_init_default                {0, 0, 0}
#define MausOutgoingMessage_init_default         {_MsgType_MIN, false, SensorPacket_init_default}
#define MsgInit_init_default                     {0}
#define MsgControl_init_default                  {0, 0}
#define MausIncomingMessage_init_default         {_MsgType_MIN, false, MsgInit_init_default, false, MsgControl_init_default}
#define SensorPacket_init_zero                   {0, 0, 0}
#define MausOutgoingMessage_init_zero            {_MsgType_MIN, false, SensorPacket_init_zero}
#define MsgInit_init_zero                        {0}
#define MsgControl_init_zero                     {0, 0}
#define MausIncomingMessage_init_zero            {_MsgType_MIN, false, MsgInit_init_zero, false, MsgControl_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define MsgControl_direction_tag                 1
#define MsgControl_speed_tag                     2
#define SensorPacket_left_tag                    1
#define SensorPacket_front_tag                   2
#define SensorPacket_right_tag                   3
#define MausIncomingMessage_type_tag             1
#define MausIncomingMessage_init_tag             2
#define MausIncomingMessage_control_tag          3
#define MausOutgoingMessage_type_tag             1
#define MausOutgoingMessage_msgSensor_tag        2

/* Struct field encoding specification for nanopb */
#define SensorPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    left,              1) \
X(a, STATIC,   SINGULAR, INT32,    front,             2) \
X(a, STATIC,   SINGULAR, INT32,    right,             3)
#define SensorPacket_CALLBACK NULL
#define SensorPacket_DEFAULT NULL

#define MausOutgoingMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  msgSensor,         2)
#define MausOutgoingMessage_CALLBACK NULL
#define MausOutgoingMessage_DEFAULT NULL
#define MausOutgoingMessage_msgSensor_MSGTYPE SensorPacket

#define MsgInit_FIELDLIST(X, a) \

#define MsgInit_CALLBACK NULL
#define MsgInit_DEFAULT NULL

#define MsgControl_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    direction,         1) \
X(a, STATIC,   SINGULAR, INT32,    speed,             2)
#define MsgControl_CALLBACK NULL
#define MsgControl_DEFAULT NULL

#define MausIncomingMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  init,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  control,           3)
#define MausIncomingMessage_CALLBACK NULL
#define MausIncomingMessage_DEFAULT NULL
#define MausIncomingMessage_init_MSGTYPE MsgInit
#define MausIncomingMessage_control_MSGTYPE MsgControl

extern const pb_msgdesc_t SensorPacket_msg;
extern const pb_msgdesc_t MausOutgoingMessage_msg;
extern const pb_msgdesc_t MsgInit_msg;
extern const pb_msgdesc_t MsgControl_msg;
extern const pb_msgdesc_t MausIncomingMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorPacket_fields &SensorPacket_msg
#define MausOutgoingMessage_fields &MausOutgoingMessage_msg
#define MsgInit_fields &MsgInit_msg
#define MsgControl_fields &MsgControl_msg
#define MausIncomingMessage_fields &MausIncomingMessage_msg

/* Maximum encoded size of messages (where known) */
#define MausIncomingMessage_size                 28
#define MausOutgoingMessage_size                 37
#define MsgControl_size                          22
#define MsgInit_size                             0
#define SensorPacket_size                        33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
